#%RAML 0.8
title: RQ Data Connect Customer Reports
baseUri: https://rqdataconnect{UrlSuffix}.iqmetrix.net
baseUriParameters:
  UrlSuffix:
    description: Suffix that defines the environment
    example: int
    type: string
documentation:
  - title: author
    content: |
      RQ
  - title: overview
    content: |

      RQ Data Connect allows you to retrieve report data from your RQ database (v4.23 and up).

      To get started, see [RQ Data Connect Guide](/guides/rq-data-connect/).

      #### Note

      For reports that provide optional URI parameters for filtering at different levels (ForWho/ForWhoIDs/LocationType/LocationTypeIDs), omitting these values will run the report at the default company level.

      ### Authentication

      RQ Data Connect and Bridge support many different methods of authentication, see {{AuthenticationOptions}}.

      Note that for all reports the {{AccessToken_Glossary}} should be mapped to an employee in RQ.
      
      ### Report List

      For a complete list of reports in RQ Data Connect, see [Report List](/rq-data-connect/report-list).


  - title: errors
    content: |
      | HTTP Status Code | Description | How to Resolve |
      |:-----------------|:------------|:---------------|
      | `HTTP 400` | `Bad Request` | Ensure request body is formatted properly |
      | `HTTP 401` | `Tokan is invalid` | Ensure Access Token is valid and has not expired |
      | `HTTP 403` | `Unauthorized` | Ensure Access Token is valid and user has appropriate security |
      | `HTTP 404` | `Not Found` | Ensure URI is valid |
      | `HTTP 429` | `Too Many Requests` | See [Rate Limiting](/api/#rate-limiting) |
      | `HTTP 500` | `Unexpected Error` | See Message in response for more information |      
resourceTypes:
  - collectionReadOnly:
      get:
          headers:
            Authorization:
              example: Bearer (Access Token)
              required: false
              description: Bearer token used for authentication. For other methods of authentication, see {{AuthenticationOptions}}
            Accept-Encoding:
              example: gzip
              required: false
              description: Compression algorithm. For other methods of compression, see {{CompressionOptions}}
          responses:
            200:
              body:
                application/json:
                  schema: <<resource>>
                application/JsonDataTable:
                  schema: <<resource>>
                text/xml:
                  schema: <<resource>>
                text/XmlDataTable:
                  schema: <<resource>>
                text/csv:
                  schema: <<resource>>
                application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
                  schema: <<resource>>
schemas:
  - CustomerListReportData: |
      {
        "name": "CustomerListReportData",
        "type": "array",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Address": {  "type": "string", "database": "VARCHAR(50)", "description": "Address - first line of the address", "example": "12 Hello St." },
          "Address2": {  "type": "string", "database": "VARCHAR(50)", "description": "Address 2 - second line of the address, if necessary", "example": "n/a" },
          "BillingAccountNumber": {  "type": "string", "database": "NVARCHAR(MAX)", "description": "BAN -  if your company uses BAN you will enter it in the Customer profile and it will show here", "example": "" },
          "City": {  "type": "string", "database": "VARCHAR(50)", "description": "City - customer's city", "example": "Fargo" },
          "ContactNumber": {  "type": "string", "database": "VARCHAR(200)", "description": "Contact # - the number that is selected on the customer's profile, it can be any of the number options there", "example": "5555555555" },
          "ContactTypeName": {  "type": "string", "database": "NVARCHAR(MAX)", "description": "Contact Type - as defined in General Customer Setup and assigned in the Custom Fields section on the customer's profile", "example": "" },
          "Country": {  "type": "string", "database": "VARCHAR(50)", "description": "Country - customer's country", "example": "United States" },
          "CustomerCompanyName": {  "type": "string", "database": "VARCHAR(50)", "description": "Company Name - may be blank depending on the kind of customer", "example": "KENTEL" },
          "CustomerFirstName": {  "type": "string", "database": "VARCHAR(50)", "description": "First Name - may be blank depending on the kind of customer", "example": "Carrie" },
          "CustomerID": {  "type": "integer", "database": "INT", "description": "Identifier for a Customer in RQ", "example": "2108754" },
          "CustomerLastName": {  "type": "string", "database": "VARCHAR(50)", "description": "Last Name - may be blank depending on the kind of customer", "example": "Madison" },
          "DateCreated": {  "type": "datetime", "database": "DATETIME", "description": "Created On - day and time the customer's profile was created", "example": "2016-01-26T20:55:53.227" },
          "DeclineToProvideEmail": {  "type": "boolean", "database": "BIT", "description": "Decline Email - the option for customers to decline email", "example": "false" },
          "Email": {  "type": "string", "database": "VARCHAR(200)", "description": "Email - may be blank, if so, the context menu will not have the Email Customer option", "example": "carry@test.iq" },
          "EmployeeName": {  "type": "string", "database": "VARCHAR(51)", "description": "Created By - employee who created the profile", "example": "iQmetrix Employee" },
          "EmployeeNameAssignedTo": {  "type": "string", "database": "VARCHAR(51)", "description": "Assigned To - may be blank if the customer has not been assigned to an employee", "example": "iQmetrix Employee" },
          "IndustryTypeName": {  "type": "string", "database": "NVARCHAR(MAX)", "description": "Industry Type - as defined in General Customer Setup and assigned in the Custom Fields section on the customer's profile", "example": "" },
          "MultiLevelPriceID": {  "type": "integer", "database": "INT", "description": "Pricing Group - as defined in Multi-Level Pricing - Setup and assigned in the Discount Level field in the More Information section on the customer's profile", "example": "1" },
          "NumberOfActivations": {  "type": "integer", "database": "INT", "description": "# of Activations - number of Activations the customer has completed as recorded in RQ", "example": "0" },
          "PositionTypeName": {  "type": "string", "database": "NVARCHAR(MAX)", "description": "Position Type - as defined in General Customer Setup and assigned in the Custom Fields section on the customer's profile", "example": "" },
          "PostalCode": {  "type": "string", "database": "VARCHAR(15)", "description": "Zip/Postal Code - zip code (USA) or postal code (Canada)", "example": "90123" },
          "Province": {  "type": "string", "database": "VARCHAR(50)", "description": "State/Province - customer's state or province", "example": "ND" },
          "TracPointMemberNumber": {  "type": "string", "database": "VARCHAR(30)", "description": "Member # - this number is automatically generated when a new customer is created", "example": "C2981754hduw" },
          "TypeOfCustomer": {  "type": "integer", "database": "INT", "description": "Type Of Customer - 0 for Company, or 3 for Individual", "example": "3" },
          "VIPCustomer": {  "type": "byte", "database": "TINYINT", "description": "VIP Customer - will be checked if this is a VIP Customer ", "example": "0" }
        }
      }     
/reports/customerlistreport?StartDate={StartDate}&StopDate={StopDate}&TypeOfCustomer={TypeOfCustomer}&FilterBy={FilterBy}&StoreIDLoggedIn={StoreIDLoggedIn}&ForWho={ForWho}&ForWhoIDs={ForWhoIDs}&LocationType={LocationType}&LocationTypeIDs={LocationTypeIDs}&Auth={Auth}&Response={Response}:
  uriParameters:
    StartDate:
      type: string
      example: 1970-01-01 00:00:00
      description: Date at which report will begin
      required: true
    StopDate:
      type: string
      example: 2016-01-01 00:00:00
      description: Date at which report will end
      required: true
    TypeOfCustomer:
      type: integer
      example: -1
      description: Acceptable values include -1 for all types, 0 for Company, 1 for Division, 2 for Group and 3 for Individual
      required: true
    FilterBy:
      type: integer
      example: 1
      description: Acceptable values include 0 for All Customers, 1 for First Activation and 2 for Sales
      required: true
    StoreIDLoggedIn:
      type: integer
      example: 1
      description: Identifier for a store in RQ. For a complete list, see <a href='/api/RQ-Data-Connect/#getting-a-list-of-stores-in-rq'>Getting A List of Stores in RQ</a>
      required: true
    ForWho:
      type: integer
      example: 1
      description: Identifier for a level at which to perform the report. For a complete list, see <a href="/api/RQ-Data-Connect/#getting-report-levels-in-rq">Getting Report Levels in RQ</a>. If <strong>LocationType</strong> is provided, this value is ignored
      required: false
    ForWhoIDs:
      type: integer
      example: 6679
      description: A comma seperated list of identifiers to filter the report. For a list of identifiers, see <a href="/api/RQ-Data-Connect/#getting-nodes-by-location-type">Getting Nodes By Location Type</a>. If <strong>LocationTypeIDs</strong> is provided, this value is ignored. To ignore filtering use -1
      required: false
    LocationType:
      type: string
      example: Store
      description: A {{LocationType}} to filter the report. For a complete list, see <a href="/api/RQ-Data-Connect/#getting-location-types">Getting Location Types</a>. If this value is provided, <strong>ForWho</strong> is ignored
      required: false
    LocationTypeIDs:
      type: string
      example: 1,2
      description: A comma seperated list of {{RQCompanyTreeNode}} identifiers to filter the report. For a complete list, see <a href="/api/RQ-Data-Connect/#getting-location-ids">Getting Location Ids</a>. To ignore filtering, use -1 or *. If this value is provided, <strong>ForWhoIDs</strong> is ignored
      required: false      
    Auth:
      type: string
      example: vRMt17P8rIBWWbVbLzLWjTNyLfvESgA2yfXhze0WZN7HSIl4slGV866p9dSw
      description: Basic token used for authentication. For other methods of authentication, see {{AuthenticationOptions}}
      required: false
    Response:
      type: string
      example: xml
      description: Default is JSON. For other methods of response, see {{ResponseOptions}}
      required: false
  type:
    collectionReadOnly:
      resource: CustomerListReportData
  get:
    displayName: Getting the Customer List Report
    description: |
      For more information, see {{support_CustomerListReport}}.