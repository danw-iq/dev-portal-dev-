#%RAML 0.8
title: general-ledger
version: v1
baseUri: https://generalledger{UrlSuffix}.iqmetrix.net/{version} 
baseUriParameters:
  UrlSuffix:
    description: Suffix that defines the environment
    example: int
    type: string
documentation:
  - title: overview
    content: |

        The General Ledger API allows you to track the movement of money between accounts for accounting purposes.

        {{general-ledger_Account}} type is determined by the `AccountCategory` property and can be one of the following: **Asset, Liability, Equity, Revenue, Expense**.
      
        Account balances will be affected by Debits and Credits in the following ways:
      
        | Account | Debit | Credit |
        |:--------|:------|:-------|
        | Asset | <i class="fa fa-arrow-up"></i> | <i class="fa fa-arrow-down"></i> |
        | Liability | <i class="fa fa-arrow-down"></i> | <i class="fa fa-arrow-up"></i> |
        | Equity | <i class="fa fa-arrow-down"></i> | <i class="fa fa-arrow-up"></i> |
        | Revenue | <i class="fa fa-arrow-down"></i> | <i class="fa fa-arrow-up"></i> |
        | Expense | <i class="fa fa-arrow-up"></i> | <i class="fa fa-arrow-down"></i> |
  - title: errors
    content: |
      | HTTP Status Code | Description | How to Resolve |
      |:-----------------|:------------|:---------------|
      | `HTTP 400` | `Error converting value {x} to type {y}` | Ensure `AccountCategory` is set to one of: Asset, Liability, Equity, Revenue, Expense |
      | `HTTP 400` | `The supplied currency code {x}  is not supported` | Ensure `CurrencyCode` is one of the supported values such as `USD` or `CAD` |
      | `HTTP 400` | `The {x} field is required` | Ensure all Required fields are provided |
      | `HTTP 400` | `Uri parameter representing resource id {x} don't match` | Ensure given request body parameters match URI parameters |
      | `HTTP 404` | `Resource cannot be found` | Ensure the `Id` specified in the URI is valid and the resource exists | 
      | `HTTP 409` | `The account has a non-unique name  or account number` | Account names and numbers must be unique for the Company |
  - title: enumerations
    content: |
        ## Enumerations
    
        ### ReferenceType 

        The following table lists the ReferencType values used in RQ.

        | ReferenceType | 
        |:--------------|
        | Account Payment | 
        | Bill Pay | 
        | Cashout | 
        | Chargeback |
        | Consignment | 
        | Full Charge Back | 
        | Gift Card Maintenance | 
        | Inventory Adjustment | 
        | Invoice |
        | Opening Balance | 
        | Petty Cash Transaction | 
        | Receive PO (& Corrections) | 
        | Sales Order | 
        | Starting Inventory Count Import | 
        | Stock Balance | 
        | Transfer | 
        | Vendor Deposit | 
        | Vendor Rebate Adjustment |    

  - title: pagination
    content: |        
        The General Ledger API supports pagination of collections of resources by default.
         
        ### Query Parameters
         
        Pagination is done through the use of `$skip` and `$top` query string parameters.
         
        `$skip` denotes the number of items to skip from the entire set of results. This value defaults to 0 if no `$skip` value is specified. If a value less than 0 is specified, the URI is considered malformed.
         
        `$top` denotes the maximum number of items to include in the response. This value defaults to 50 if no `$top` value is specified. Acceptable values are in the range [0-500]. If a value more than 500 is specified, the URI is considered malformed.
         
        ### Navigation Links
         
        Pagination links for 'self', 'prev' and 'next' are returned by default when the media type is a hypermedia-enabled media type (i.e. HAL).
         
        These links are _relative_, they do not include the base endpoint. It is the responsibility of the client to prepend the appropriate endpoint.
         
        ##### Example
         
        ```csharp
        {
            "_links": {
                "self": {
                    "href": "Companies(14146)/Accounts?$skip=10&$top=10",
                    "templated": false
                },
                "next": {
                    "href": "Companies(14146)/Accounts?$skip=20&$top=10",
                    "templated": false
                },
                "prev": {
                    "href": "Companies(14146)/Accounts?$skip=0&$top=10",
                    "templated": false
                }
            },
            "_embedded": {
                "self": []
            }
        }
        ```

        In the example above, the `_links` section is included in the data returned from an API call to get General Ledger Accounts, where `$skip=10` and `$top=10`.
         
        The `self`.`href` value is the encoded version of the API request that returned these results.
         
        The `next`.`href` refers to a resource containing a page with the **next** 10 items.
         
        The `prev`.`href` refers to a resource containing a page with the **previous** 10 items.
resourceTypes:
    - collectionReadOnly:
        securedBy: [oauth_2_0] 
        get:
            headers:
              Authorization:
                example: Bearer (Access Token)
                description: See <a href='/api/authentication/#obtaining-an-access-token'>Obtaining an Access Token</a>                
              Accept:
                example: application/hal+json    
            responses:
                200:
                    body:
                        application/hal+json:
                          example: |
                            <<exampleResourceHal>>
securitySchemes:
    - oauth_2_0:
        description: |
            iQmetrix APIs support OAuth 2.0 for authenticating API requests.
        type: OAuth 2.0
        describedBy:
            headers:
                Authorization:
                    description: |
                       Used to send a valid OAuth 2 access token.
                    type: string
            responses:
                401:
                    description: |
                        Bad or expired token. This can happen if the user or iQmetrix
                        revoked or expired an access token. To fixsorry fo, you should re-
                        authenticate the user.
                403:
                    description: |
                        Bad OAuth request (wrong consumer key, bad nonce, expired
                        timestamp...). Unfortunately, re-authenticating the user won"t help here.
        settings:
          authorizationUri: https://accountsint.iqmetrix.net/v1/oauth2/authorize
          accessTokenUri: https://accountsint.iqmetrix.net/v1/oauth2/tokenn
          authorizationGrants: [ owner ]
schemas:
  - Account: |
      {
        "name": "Account",
        "type": "array",
        "$schema": "http://json-schema.org/draft-03/schema",
        "description": "A General Ledger **Account** is a record used to sort and store Transactions.",
        "properties": {
          "Id": { "type": "GUID", "description": "Unique identifier", "example": "7c7d31f7-f6f9-4a96-9eec-b0e26e1d6787" }, 
          "AccountName": { "type": "string", "size": "128", "description": "Account name. Must be unique across the entire list of Accounts and cannot be empty", "example": "Accounting" }, 
          "AccountNumber": { "type": "string", "size": "128", "description": "Account number. Must be unique across the entire list of Accounts and cannot be empty", "example": "1518" }, 
          "AccountCategory": { "type": "string",  "description": "Account Category, acceptable values include: **Asset, Liability, Equity, Revenue and Expense**", "example": "Asset" }, 
          "SubCategory": { "type": "string", "size": "256", "description": "A string that can be used to further group Accounts into sub-categories", "example": "Current Assets" }, 
          "CreatedByUserId": { "type": "integer", "description": "Auditing column, the identifier of the [User](/api/user-manager/#user) that created this Account", "ref": "user-manager.User.Id" }, 
          "UpdatedByUserId": { "type": "integer", "description": "Auditing column, the identifier of the [User](/api/user-manager/#user) that last updated this Account", "ref": "user-manager.User.Id" }, 
          "CurrencyCode": { "type": "string",  "description": "The 3 letter ISO currency code for the currency that this Account records its Transactions in. Can't be changed if an Account has had Transactions posted to it. Not case sensitive and will be stored and returned in upper case. See <a href='/api/reference/#getting-all-currencies'>Getting All Currencies</a> for a list of supported Currencies.", "example": "CAD" }, 
          "CustomProperties": { "type": "object", "size": "4000", "description": "A set of key-value pairs that contain extra data related to this Account. The maximum length of CustomProperties, when serialized to JSON, is 4000 characters", "example": "" }, 
          "DateCreatedUTC": { "type": "DateTime", "description": "Auditing column showing when this Account was first created, in UTC", "example": "2015-12-04T19:26:02.806415Z" }, 
          "DateUpdatedUTC": { "type": "DateTime", "description": "Auditing column showing when this Account was last updated, in UTC", "example": "2015-04-22T19:27:12.557" }, 
          "Description": { "type": "string", "size": "1024","description": "Description", "example": "This is a Canadian $ account" }, 
          "IsEnabled": { "type": "boolean", "description": "A flag to indicate if this Account is Enabled", "example": "true" }, 
          "Version": { "type": "integer", "description": "Latest revision number", "example": "1" }
        }
      }
  - Transaction: |
      {
        "name": "Transaction",
        "type": "array",
        "$schema": "http://json-schema.org/draft-03/schema",
        "description": "{{note}}A single Transaction must have 2 or more Entries where the sum of the Debits and Credits of those Entries is the same value, this is called a Balanced Transaction{{end}}\n\nA **Transaction** is a financial record that affects two or more **Accounts**.",
        "properties": {
          "Id": { "type": "GUID", "description": "Unique identifier", "example": "d68f8dd0-26c6-4eb3-8c49-062e05b07132" }, 
          "TransactionDateUTC": { "type": "DateTime", "description": "The date and time that this Transaction occurred, in UTC", "example": "2015-12-04T19:28:05.1970511Z" }, 
          "CreatedByUserId": { "type": "integer", "description": "Auditing column, the identifier of the [User](/api/user-manager/#user) that created this Account", "ref": "user-manager.User.Id" }, 
          "Entries": { "type": "array", "arrayType":"object", "description": "The collection of Entries for this Transaction", "ref": "general-ledger.Entry" }
        }
      }
  - Entry: |
      {
        "name": "Entry",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "description": "\n\n* A Transaction is <b>immutable</b> and permanent after it has been created it cannot be updated or deleted\n* Debit and Credit are decimal values without an associated currency\n* All transactions within the context of this {{general-ledger_Account}} will use the currency configured at the Account level",
        "properties": {
          "AccountID": { "type": "GUID", "description": "Identifier for the [Account](#account) this Entry affects", "ref": "general-ledger.Account.Id" }, 
          "Credit": { "type": "decimal", "description": "The value of the Credit side of this Entry must be a positive value. If Credit is positive, Debit must be 0. Credit and Debit can also both be 0", "example": "0" }, 
          "CustomProperties": { "type": "object", "size": "4000", "description": "Key-value pairs that contain extra data related to this Entry, maximum length when serialized to JSON is 4000 characters", "example": "" }, 
          "Debit": { "type": "decimal", "description": "The value of the Debit side of this entry, this must be a positive value. If Debit is positive, Credit must be 0. Credit and Debit can also both be 0", "example": "5000" }, 
          "EntityId": { "type": "integer", "description": "Identifier for the [Location](/api/company-tree/#location) this Entry applies to", "ref": "company tree.Location.Id" }, 
          "LineNumber": { "type": "integer", "description": "A value indicating the sort order of this entry within the Transaction", "example": "1" }, 
          "Memo": { "type": "string", "size": "1024", "description": "Memo string for this Entry", "example": "Memo" }, 
          "ReferenceID": { "type": "string", "size": "128", "description": "Reference number string, such as the invoice that caused the Transaction", "example": "INV005" }, 
          "ReferenceType": { "type": "string", "size": "128", "description": "String value to indicate what ReferenceID is referring to. See [ReferenceType](#referencetype)", "example": "Invoice ID" }
        }
      }
  - EntityAccountLink: |
      {
        "exclude": "true",
        "name": "EntityAccountLink",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "description": "",
        "properties": {
          "Id": { "type": "integer", "description": "Identifier for a [CompanyTreeNode](/api/company-tree/#companytreenode)", "ref": "company tree.Location.Id" }, 
          "PaymentLinks": { "type": "array", "arrayType": "object", "description": "Payment Links", "ref": "general-ledger.PaymentLink" },
          "ProductClassificationLinks": { "type": "array", "arrayType": "object", "description": "ProductClassificationLinks", "ref": "general-ledger.ProductClassificationLink" },
          "ProductSpecificationLinks": { "type": "array", "arrayType": "object", "description": "ProductSpecificationLinks", "ref": "general-ledger.ProductSpecificationLink" },
          "ScenarioLinks": { "type": "array", "arrayType": "object", "description": "ScenarioLinks", "ref": "general-ledger.ScenarioLink"},
          "SupplierLinks": { "type": "array", "arrayType": "object", "description": "SupplierLinks", "ref": "general-ledger.SupplierLink"},
          "TaxLinks": { "type": "array", "arrayType": "object", "description": "TaxLinks", "ref": "general-ledger.TaxLink" }
        }
      }    
  - ProductSpecificLink: |
      {
        "exclude": "true",
        "name": "ProductSpecificLink",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "description": "",
        "properties": {
          "Id": { "type": "GUID", "description": "Unique identifier", "example": "54d85b4e-17f2-4200-bc49-843b66eeae98", "generated": "true" }, 
          "AccountID": { "type": "GUID", "description": "Identifier for an [Account](#account)", "ref": "general-ledger.Account.Id" },
          "CatalogItemID": { "type": "GUID", "description": "[CatalogItem](/api/catalog/#catalogitem) identifier", "ref": "catalog.CatalogItem.CatalogItemId" }, 
          "CreatedByUserID": { "type": "integer", "description": "Auditing column, the identifier of the [User](/api/user-manager/#user) that created this Link", "ref": "user-manager.User.Id" }, 
          "DateCreatedUTC": { "type": "DateTime", "description": "Auditing column showing when this Link was first created, in UTC", "example": "2015-12-04T19:26:02.806415Z" }, 
          "DateUpdatedUTC": { "type": "DateTime", "description": "Auditing column showing when this Link was last updated, in UTC", "example": "2015-04-22T19:27:12.557" },           
          "EntityId": { "type": "integer", "description": "Identifier for a [CompanyTreeNode](/api/company-tree/#companytreenode)", "ref": "company tree.Location.Id" }, 
          "LinkType": { "type": "integer", "description": "Type for this Link, see [ProduductLinkTypes](#productlinktypes)", "example": "1" },
          "UpdatedByUserID": { "type": "integer", "description": "Auditing column, the identifier of the [User](/api/user-manager/#user) that last updated this Link", "ref": "user-manager.User.Id" }, 
          "Version": { "type": "integer", "description": "Latest revision number", "example": "1" }
        }
      }  
  - PaymentLink: |
      {
        "exclude": "true",
        "name": "PaymentLink",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "description": "",
        "properties": {
          "Id": { "type": "GUID", "description": "Unique identifier", "example": "56ab2329-2571-4e66-98e8-0678f8fce018", "generated": "true" }, 
          "AccountID": { "type": "GUID", "description": "Identifier for an [Account](#account)", "ref": "general-ledger.Account.Id" },
          "PaymentMethodID": { "type": "integer", "description": "Identifier of a Payment Method", "example": "5" }, 
          "CreatedByUserID": { "type": "integer", "description": "Auditing column, the identifier of the [User](/api/user-manager/#user) that created this Link", "ref": "user-manager.User.Id" },        
          "DateCreatedUTC": { "type": "DateTime", "description": "Auditing column showing when this Link was first created, in UTC", "example": "2015-12-04T19:26:02.806415Z" }, 
          "DateUpdatedUTC": { "type": "DateTime", "description": "Auditing column showing when this Link was last updated, in UTC", "example": "2015-04-22T19:27:12.557" },           
          "EntityId": { "type": "integer", "description": "Identifier for a [CompanyTreeNode](/api/company-tree/#companytreenode)", "ref": "company tree.Location.Id" }, 
          "UpdatedByUserID": { "type": "integer", "description": "Auditing column, the identifier of the [User](/api/user-manager/#user) that last updated this Link", "ref": "user-manager.User.Id" }, 
          "Version": { "type": "integer", "description": "Latest revision number", "example": "1" }
        }
      }
  - ProductClassificationLink: |
      {
        "exclude": "true",
        "name": "ProductClassificationLink",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "description": "",
        "properties": {
          "Id": { "type": "GUID", "description": "Unique identifier", "example": "b9e65c34-eb48-4e0d-a0e8-c3bc1060ba72", "generated": "true" }, 
          "AccountID": { "type": "GUID", "description": "Identifier for an [Account](#account)", "ref": "general-ledger.Account.Id" },
          "CategoryOrClassificationID": { "type": "integer", "description": "Identifier of a [Category](/api/classification-tree/#category) or [Classification](/api/classification-tree/#classification)", "ref": "classification-tree.Category.Id" }, 
          "CreatedByUserID": { "type": "integer", "description": "Auditing column, the identifier of the [User](/api/user-manager/#user) that created this Link", "ref": "user-manager.User.Id" },        
          "DateCreatedUTC": { "type": "DateTime", "description": "Auditing column showing when this Link was first created, in UTC", "example": "2015-12-04T19:26:02.806415Z" }, 
          "DateUpdatedUTC": { "type": "DateTime", "description": "Auditing column showing when this Link was last updated, in UTC", "example": "2015-04-22T19:27:12.557" },           
          "EntityId": { "type": "integer", "description": "Identifier for a [CompanyTreeNode](/api/company-tree/#companytreenode)", "ref": "company tree.Location.Id" }, 
          "LinkType": { "type": "integer", "description": "Type for this Link, see [ProduductLinkTypes](#productlinktypes)", "example": "1" },          
          "UpdatedByUserID": { "type": "integer", "description": "Auditing column, the identifier of the [User](/api/user-manager/#user) that last updated this Link", "ref": "user-manager.User.Id" }, 
          "Version": { "type": "integer", "description": "Latest revision number", "example": "1" }
        }
      }  
  - ScenarioLink: |
      {
        "exclude": "true",
        "name": "ScenarioLink",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "description": "",
        "properties": {
          "Id": { "type": "GUID", "description": "Unique identifier", "example": "243f249b-0a93-4324-b31a-1d8cb78b0da1", "generated": "true" }, 
          "EntityId": { "type": "integer", "description": "Identifier for a [CompanyTreeNode](/api/company-tree/#companytreenode)", "ref": "company tree.Location.Id" }, 
          "AccountID": { "type": "GUID", "description": "Identifier for an [Account](#account)", "ref": "general-ledger.Account.Id" },
          "CreatedByUserID": { "type": "integer", "description": "Auditing column, the identifier of the [User](/api/user-manager/#user) that created this Link", "ref": "user-manager.User.Id" }, 
          "DateCreatedUTC": { "type": "DateTime", "description": "Auditing column showing when this Link was first created, in UTC", "example": "2015-12-04T19:26:02.806415Z" }, 
          "DateUpdatedUTC": { "type": "DateTime", "description": "Auditing column showing when this Link was last updated, in UTC", "example": "2015-04-22T19:27:12.557" },
          "LinkType": { "type": "integer", "description": "Type for this Link, see [ScenarioLinkTypes](#scenariolinktypes)", "example": "1" },
          "UpdatedByUserID": { "type": "integer", "description": "Auditing column, the identifier of the [User](/api/user-manager/#user) that last updated this Link", "ref": "user-manager.User.Id" }, 
          "Version": { "type": "integer", "description": "Latest revision number", "example": "1" }
        }
      }
  - SupplierLink: |
      {
        "exclude": "true",
        "name": "SupplierLink",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "description": "",
        "properties": {
          "Id": { "type": "GUID", "description": "Unique identifier", "example": "4df0ba7c-c0bb-4042-8d8d-80d9efb70c89", "generated": "true" }, 
          "AccountID": { "type": "GUID", "description": "Identifier for an [Account](#account)", "ref": "general-ledger.Account.Id" },
          "CreatedByUserID": { "type": "integer", "description": "Auditing column, the identifier of the [User](/api/user-manager/#user) that created this Link", "ref": "user-manager.User.Id" }, 
          "DateCreatedUTC": { "type": "DateTime", "description": "Auditing column showing when this Link was first created, in UTC", "example": "2015-12-04T19:26:02.806415Z" }, 
          "DateUpdatedUTC": { "type": "DateTime", "description": "Auditing column showing when this Link was last updated, in UTC", "example": "2015-04-22T19:27:12.557" },           
          "EntityId": { "type": "integer", "description": "Identifier for a [CompanyTreeNode](/api/company-tree/#companytreenode)", "ref": "company tree.Location.Id" },         
          "SupplierId": { "type": "", "description": "Identifier for a [Supplier](/api/entity-store/#supplier)", "ref": "entity-store.Supplier.Id"},
          "UpdatedByUserID": { "type": "integer", "description": "Auditing column, the identifier of the [User](/api/user-manager/#user) that last updated this Link", "ref": "user-manager.User.Id" }, 
          "Version": { "type": "integer", "description": "Latest revision number", "example": "1" }
        }
      }
  - TaxLink: |
      {
        "exclude": "true",
        "name": "TaxLink",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "description": "",
        "properties": {
          "Id": { "type": "GUID", "description": "Identifier", "example": "ed729b51-3a55-4eb6-9188-183015d8acfc" },          
          "AccountID": { "type": "GUID", "description": "Identifier for an [Account](#account)", "ref": "general-ledger.Account.Id" },
          "CreatedByUserID": { "type": "integer", "description": "Auditing column, the identifier of the [User](/api/user-manager/#user) that created this Link", "ref": "user-manager.User.Id" }, 
          "DateCreatedUTC": { "type": "DateTime", "description": "Auditing column showing when this Link was first created, in UTC", "example": "2015-12-04T19:26:02.806415Z" }, 
          "DateUpdatedUTC": { "type": "DateTime", "description": "Auditing column showing when this Link was last updated, in UTC", "example": "2015-04-22T19:27:12.557" },           
          "EntityId": { "type": "integer", "description": "Identifier for a [CompanyTreeNode](/api/company-tree/#companytreenode)", "ref": "company tree.Location.Id" },                   
          "LinkType": { "type": "string", "description": "Type for this Link, see [TaxLinkTypes](#taxlinktypes)", "example": "TaxCollected" },
          "TaxID": { "type": "GUID", "description": "Identifier for a Tax", "example": "7e736abc-6d81-4e84-b516-6c1ca6e6eecf" }, 
          "UpdatedByUserID": { "type": "integer", "description": "Auditing column, the identifier of the [User](/api/user-manager/#user) that last updated this Link", "ref": "user-manager.User.Id" }, 
          "Version": { "type": "integer", "description": "Latest revision number", "example": "1" }
        }
      }   
/Companies({CompanyId})/Accounts?$skip={Skip}&$top={Top}:
  uriParameters:
    CompanyId:
      displayName: CompanyId
      type: integer
      example: 14146
      description: Identifier for the {{Company}}
      required: true
    Skip:
      displayName: skip
      type: integer
      description: Number of records to skip
      example: 0
      required: false
    Top: 
      displayName: top
      type: integer
      description: Number of records to take
      example: 5
      required: false
  type:
    collectionReadOnly:
      exampleResourceHal: | 
        {
          "_links": {
              "self": {
                  "href": "Companies(14146)/Accounts?$skip=0&$top=5",
                  "templated": false
              },
              "next": {
                  "href": "Companies(14146)/Accounts?$skip=5&$top=5",
                  "templated": false
              }
          },
          "_embedded": {
              "self": [
                  {
                      "_links": {
                          "self": {
                              "href": "Companies(14146)/Accounts(7c7d31f7-f6f9-4a96-9eec-b0e26e1d6787)",
                              "templated": false
                          }
                      },
                      "_embedded": {},
                      "Id": "7c7d31f7-f6f9-4a96-9eec-b0e26e1d6787",
                      "AccountName": "CAD Bank Account: 518",
                      "AccountNumber": "1518",
                      "AccountCategory": "Asset",
                      "SubCategory": "Current Assets",
                      "CreatedByUserId": 22212,
                      "UpdatedByUserId": 22212,
                      "CurrencyCode": "CAD",
                      "CustomProperties": { },
                      "DateCreatedUTC": "2015-04-23T13:14:12.997",
                      "DateUpdatedUTC": "2015-04-23T13:14:12.997",
                      "Description": "This is a Canadian $ account",
                      "IsEnabled": true,
                      "Version": "1"
                  },
                  ...
              ]
          }
        }
  get:
    displayName: Getting Accounts
    description: |
       {{callout_info}}<b>Sorting Order</b><br/>Accounts are ordered alphabetically by <code>AccountName</code>{{end}}
/Companies({CompanyId})/Transactions?$filter=TransactionDateUTC ge datetime'{StartDate}' and TransactionDateUTC le datetime'{EndDate}'&$skip={Skip}&$top={Top}:
  uriParameters:
    CompanyId:
      displayName: CompanyId
      type: integer
      example: 14146
      description: Identifier for the {{Company}}
      required: true
    Skip:
      displayName: skip
      type: integer
      description: Number of records to skip
      example: 0
      required: false
    Top: 
      displayName: top
      type: integer
      description: Number of records to take
      example: 5
      required: false          
    StartDate:
      displayName: StartDate
      type: string
      example: 2015-01-01T00:00:00.000
      description: Date at which to begin search request, in UTC
      required: true
    EndDate:
      displayName: EndDate
      type: string
      example: 2015-12-31T23:59:59.000
      description: Date at which to end search request, in UTC
      required: true
  type:
    collectionReadOnly:
      exampleResourceHal: | 
        [
            {
                "_links": {
                    "self": {
                        "href": "Companies(14146)\/Transactions?$filter=TransactionDateUTC%20ge%20datetime%272015-01-01T00:00:00.000%27%20and%20TransactionDateUTC%20le%20datetime%272015-12-31T23:59:59.000%27&$skip=0&$top=5",
                        "templated": false
                    },
                    "next": {
                        "href": "Companies(14146)\/Transactions?$filter=TransactionDateUTC%20ge%20datetime%272015-01-01T00:00:00.000%27%20and%20TransactionDateUTC%20le%20datetime%272015-12-31T23:59:59.000%27&$skip=5&$top=5",
                        "templated": false
                    }
                },
                "_embedded": {
                    "self": [
                        {
                            "_links": {
                                "self": {
                                    "href": "Companies(14146)\/Transactions(2862e667-9dd7-45b0-9f6b-7e6bdaad0f61)",
                                    "templated": false
                                }
                            },
                            "_embedded": { },
                            "Id": "2862e667-9dd7-45b0-9f6b-7e6bdaad0f61",
                            "TransactionDateUTC": "2015-04-23T13:14:34.2",
                            "CreatedByUserId": 0,
                            "Entries": [
                                {
                                    "AccountID": "7c7d31f7-f6f9-4a96-9eec-b0e26e1d6787",
                                    "Credit": 0,
                                    "CustomProperties": { },
                                    "Debit": 5000,
                                    "EntityId": 25,
                                    "LineNumber": 1,
                                    "Memo": "Memo for debit",
                                    "ReferenceID": "INV005",
                                    "ReferenceType": "Invoice ID"
                                },
                                {
                                    "AccountID": "da81b1f2-2bdf-49bc-9b43-8ee787c049f0",
                                    "Credit": 5000,
                                    "CustomProperties": { },
                                    "Debit": 0,
                                    "EntityId": 25,
                                    "LineNumber": 2,
                                    "Memo": "Memo for credit",
                                    "ReferenceID": "INV005",
                                    "ReferenceType": "Invoice ID"
                                }
                            ]
                        }
                    ]
                }
            },
          ...
        ]
  get:
    displayName: Getting Transactions By Date
    description: |
        {{callout_info}}<b>Sorting Order</b><br/>When getting Transactions, the order is ascending by <code>TransactionDateUTC</code> with the oldest Transactions listed first{{end}}