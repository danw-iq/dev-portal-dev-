#%RAML 0.8
title: punch-clock
version: v1
baseUri: https://punchclock{UrlSuffix}.iqmetrix.net/{version} 
baseUriParameters:
  UrlSuffix:
    description: Suffix that defines the environment
    example: int
    type: string
documentation:
  - title: overview
    content: |
      The Punch Clock API allows you to retrieve Punch Clock entries from your RQ database. 
  - title: author
    content: | 
      RQ
  - title: pagination
    content: |
        The Punch Clock API supports pagination of collections of resources for some requests.

        ### Query Parameters

        Pagination is done through the use of `$skip` and `$top` query string parameters.

        `$skip` denotes the number of items to skip from the entire set of results. If a value less than 0 is specified, the URI is considered malformed.

        `$top` denotes the maximum number of items to include in the response. This value defaults to 50 if a `$skip` value but no `$top` value is specified. Acceptable values are in the range [0-100]. 

        ### Navigation Links

        Pagination-enabled requests include links for 'self', 'prev' and 'next' in the response data. 

        These links are _relative_, they do not include the base endpoint. It is the responsibility of the client to prepend the appropriate endpoint.

        ##### Example

        ```csharp
        {
            "_links": {
                "prev": null,
                "self": "v1/Companies(14146)/PunchEntries?$skip=0&$top=5",
                "next": "v1/Companies(14146)/PunchEntries?$skip=5&$top=5"
            },
            "_metadata": {
                "count": 15,
                "skip": 0,
                "top": 5
            }
        }
        ```

        In the example above, the `_links` section is included in the data returned from an API call to [Getting All Punch Entries](#getting-all-punch-entries), where `$skip=0` and `$top=5`.

        The `self`.`href` value is the relative version of the API call that returned these results.

        The `next`.`href` refers to a resource containing a page with the **next** 5 items.

        The `prev`.`href` refers to a resource containing a page with the **previous** 5 items.
resourceTypes:
    - collectionReadOnly:
        securedBy: [oauth_2_0]
        get:
            headers:
              Authorization:
                example: Bearer (Access Token)
              Accept:
                example: application/hal+json   
            responses:
                200:
                    body:
                        application/hal+json:
                          schema: <<resourceHal>>
securitySchemes:
    - oauth_2_0:
        description: |
            iQmetrix APIs support OAuth 2.0 for authenticating API requests.
        type: OAuth 2.0
        describedBy:
            headers:
                Authorization:
                    description: |
                       Used to send a valid OAuth 2 access token.
                    type: string
            responses:
                401:
                    description: |
                        Bad or expired token. This can happen if the user or iQmetrix
                        revoked or expired an access token. To fixsorry fo, you should re-
                        authenticate the user.
                403:
                    description: |
                        Bad OAuth request (wrong consumer key, bad nonce, expired
                        timestamp...). Unfortunately, re-authenticating the user won"t help here.
        settings:
          authorizationUri: https://accountsint.iqmetrix.net/v1/oauth2/authorize
          accessTokenUri: https://accountsint.iqmetrix.net/v1/oauth2/tokenn
          authorizationGrants: [ owner ]
schemas:
  - PunchEntry: |
      {
        "name": "PunchEntry",
        "type": "array",
        "$schema": "http://json-schema.org/draft-03/schema",
        "description": "An instance of a clock punch for an employee at a location, with a punch-in time and (optionally) a punch-out time.\n\n",
        "properties": {
          "Id": { "type": "integer", "description": "Unique Identifier", "example": "1953" }, 
          "CreatedDateUtc": { "type": "DateTime", "description": "Created date and time, in UTC", "example": "2015-09-23T15:41:59.403" }, 
          "EmployeeVerified": { "type": "boolean", "description": "A flag to indicate if the employee has verified the PunchEntry", "example": "false" }, 
          "EmployeeSpecialId": { "type": "string", "description": "Special identifier for Employee in RQ", "example": "1002" }, 
          "LastUpdateDateUtc": { "type": "DateTime", "description": "Time of the last update, in UTC", "example": "2015-09-23T15:55:09.927" }, 
          "LocationCode": { "type": "string", "size": "100", "description": "An identifier for the Location in an external system", "example": "CWW" }, 
          "LocationId": { "type": "integer", "description": "Identifier for the [Location](/api/company-tree/#location)", "ref": "company tree.Location.Id" }, 
          "ManagerVerified": { "type": "boolean", "description": "A flag to indicate if the manager has verified the PunchEntry", "example": "false" }, 
          "PunchInComments": { "type": "string", "size": "100", "description": "Punch in comments", "example": "IN - FingerPrint/HomeConsole" }, 
          "PunchOutComments": { "type": "string", "size": "100", "description": "Punch out comments", "example": "OUT - HomeConsole" }, 
          "TimeInAtStore": { "type": "DateTime", "description": "Punch in time (local time at store), in UTC", "example": "2015-09-23T09:41:52.653" }, 
          "TimeOutAtStore": { "type": "DateTime", "description": "Punch out time (local time at store), in UTC", "example": "2015-09-23T09:55:03.973" }, 
          "UserId": { "type": "integer", "description": "Identifier for a [User](/api/user-manager/#user)", "ref": "user-manager.User.Id" }, 
          "Version": { "type": "integer", "description": "Latest revision number", "example": "1" }, 
          "RQPunchId": { "type": "integer", "description": "Reserved for internal use", "example": "" }
        }
      }      
  - PunchEntryHal: |
      {
        "exclude": "true",        
        "name": "PunchEntryHal",
        "type": "array",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "_links": { "type": "object", "putDescription": "Relative links to requests related to this resource", "ref": "punch-clock.PunchLinks" },
          "_embedded": { "type": "object", "putDescription": "?????????????", "example": "" }, 
          "Id": { "type": "integer", "description": "Unique Identifier", "example": "1953" }, 
          "CreatedDateUtc": { "type": "DateTime", "description": "Created date and time, in UTC", "example": "2015-09-23T15:41:59.403" }, 
          "EmployeeVerified": { "type": "boolean", "description": "A flag to indicate if the employee has verified the PunchEntry", "example": "false" }, 
          "EmployeeSpecialId": { "type": "boolean", "description": "Special identifier for Employee in RQ", "example": "1002" }, 
          "LastUpdateDateUtc": { "type": "DateTime", "description": "Time of the last update, in UTC", "example": "2015-09-23T15:55:09.927" }, 
          "LocationCode": { "type": "string", "size": "100", "description": "An identifier for the Location in an external system", "example": "CWW" }, 
          "LocationId": { "type": "integer", "description": "Identifier for the [Location](/api/company-tree/#location)", "ref": "company tree.Location.Id" }, 
          "ManagerVerified": { "type": "boolean", "description": "A flag to indicate if the manager has verified the PunchEntry", "example": "false" }, 
          "PunchInComments": { "type": "string", "size": "100", "description": "Punch in comments", "example": "IN - FingerPrint/HomeConsole" }, 
          "PunchOutComments": { "type": "string", "size": "100", "description": "Punch out comments", "example": "OUT - HomeConsole" }, 
          "TimeInAtStore": { "type": "DateTime", "description": "Punch in time (local time at store), in UTC", "example": "2015-09-23T09:41:52.653" }, 
          "TimeOutAtStore": { "type": "DateTime", "description": "Punch out time (local time at store), in UTC", "example": "2015-09-23T09:55:03.973" }, 
          "UserId": { "type": "integer", "description": "Identifier for a [User](/api/user-manager/#user)", "ref": "user-manager.User.Id" }, 
          "Version": { "type": "integer", "description": "Latest revision number", "example": "1" }, 
          "RQPunchId": { "type": "integer", "description": "Reserved for internal use", "example": "" }
        }
      }            
  - PunchEntriesHal: |
      { 
        "name": "PunchEntriesHal",
        "type": "object",
        "exclude": "true",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "_links": { "type": "object", "putDescription": "Relative URL's used for Pagination", "ref": "punch-clock.PunchPropertyLinks" },
          "_embedded": { "type": "object", "ref": "punch-clock.PunchEmbeddedLinks" }
        }
      }
  - PunchEmbeddedLinks: |
      { 
        "name": "PunchEmbeddedLinks",
        "type": "object",
        "exclude": "true",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "self": { "type": "array", "arrayType": "object", "ref": "punch-clock.PunchEntryHal" }
        }
      }
  - PunchLinks: |
      {
        "name": "PunchLinks",
        "exclude": "true",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "self": { "type": "object", "ref": "punch-clock.PunchSelf" }
        }
      }
  - PunchSelf: |
      {
        "name": "PunchSelf",
        "exclude": "true",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "href": { "type": "string", "putDescription": "A link to the request that will return this Punch", "example": "v1/Companies(14146)/PunchEntries(15)" },
          "templated": { "type": "boolean", "putDescription": "A flag to indicate ????????????????", "example": "false" }
        }
      }              
  - PunchPropertyLinks: |
      { 
        "name": "PunchPropertyLinks",
        "type": "object",
        "exclude": "true",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "prev": { "type": "object", "putDescription": "Refers to a resource containing the previous page of results, null if there is no previous page", "example": "null" },
          "self": { "type": "object", "putDescription": "The request that returned this result", "ref": "punch-clock.iqPunch" },
          "next": { "type": "object", "putDescription": "Refers to a resource containing the next page of results, null if this is the last page", "example": "null" }
        }
      }
  - iqPunch: |
      {
        "name": "iqPunch",
        "exclude": "true",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "href": { "type": "string", "example": "v1/Companies(14146)/PunchEntries?$filter=ransactionDateUTC ge datetime'2015-01-01T00:00:00.000' and TransactionDateUTC le datetime'2015-12-31T23:59:59.000'&$skip=0&$top=10" },
          "templated": { "type": "boolean", "putDescription": "A flag to indicate ????????????????", "example": "false" }
        }
      }             
/Companies({CompanyId})/PunchEntries?$filter=LastUpdateDateUtc ge datetime'{StartDate}' and LastUpdateDateUtc le datetime'{EndDate}'&$skip={Skip}&$top={Top}:
  uriParameters:
    CompanyId:
      displayName: CompanyId
      type: integer
      example: 14146
      description: Identifier for the {{Company}}
      required: true
    StartDate:
      displayName: StartDate
      type: string
      example: 2015-01-01T00:00:00.000
      description: Date at which to begin search request, in UTC
      required: false
    EndDate:
      displayName: EndDate
      type: string
      example: 2015-12-31T23:59:59.000
      description: Date at which to end search request, in UTC
      required: false
    Skip:
      displayName: skip
      description: Number of records to skip
      type: integer
      example: 1
      required: false
    Top: 
      displayName: top
      description: Number of records to take
      type: integer
      example: 10
      required: false      
  type:
    collectionReadOnly:
      resourceHal: PunchEntriesHal 
  get:
    displayName: Getting All Punch Entries
    description: |
        By default, the sorting order of the response to this request will be **descending** order by `LastUpdateDateUtc`.

        {{note}}
        Don't forget <code>$filter=</code> in the request!
        {{end}}  