#%RAML 0.8
title: catalog
version: v1
baseUri: https://catalogs{UrlSuffix}.iqmetrix.net/{version} 
baseUriParameters:
  UrlSuffix:
    description: Suffix that defines the environment
    example: int
    type: string
documentation:
  - title: overview
    content: |
      Retailers can select products from the {{ProductLibrary_Concept}} to create a **Retailer Catalog**, a collection of products that can be sold.

      ## Product Slug

      A **slug** is a generated identifier for a Product within the Product Library, determined using its {{ProductStructure_Concept}} and the following formula:

      ```
      M{ProductDocumentId}-V{VariationId}-E{EntityId}-R{Region}
      ```

      * ProductDocumentId - Identifier for a {{ProductDocument}}
      * VariationId - Identifier for a {{Variation}}
      * EntityId - Identifier for a {{Company}} or {{Carrier}} associated with a Revision, as described in [Creating a Revision](/api/product-structure/#creating-a-revision)
      * Region - Must contain 2 or 4 characters, either a Country Code, or Country Code plus a State Code, as described in [Creating a Revision](/api/product-structure/#creating-a-revision)

      ### Example

      > Example

      ```
      M1-V2-E3-RCABC
      ```

      Using the slug in the example above, we can determine the following:

      * The identifier for the {{ProductDocument}} for this Product is **1**
      * This Revision was made from a Variation, as there is a **V** present
      * The Company or Carrier that owns this Revision has an Id of `3`
      * This Revision is specific to British Columbia (`BC`), Canada (`CA`)

  - title: errors
    content: |
      | HTTP Status Code | Description | How to Resolve |
      |:-----------------|:------------|:---------------|
      | `HTTP 400` | `Cannot add product to catalog` | Ensure {{Slug_Glossary}} is valid |
      | `HTTP 404` | `Catalog Item not found` | Ensure CatalogItem GUID is valid and the CatalogItem exists |
resourceTypes:
    - collectionReadOnly:
        securedBy: [oauth_2_0]
        get:
            headers:
              Authorization:
                example: Bearer (Access Token)
                description: See <a href='/api/authentication/#obtaining-an-access-token'>Obtaining an Access Token</a>                
              Accept:
                example: application/json    
            responses:
                200:
                    body:
                        application/json:
                          schema: <<resource>>
    - collectionWriteOnly:
        securedBy: [oauth_2_0]
        post:
            headers:
              Authorization:
                example: Bearer (Access Token)
                description: See <a href='/api/authentication/#obtaining-an-access-token'>Obtaining an Access Token</a>
              Accept:
                example: application/json 
              Content-Type:
                example: application/json  
            body:
              application/json:
                schema: <<resourcePost>>
            responses:
                200:
                    body:
                        application/json:
                          schema: <<resource>>                                
    - singularEndpointGetPutDelete:
        securedBy: [oauth_2_0]
        get:
            headers:
              Authorization:
                example: Bearer (Access Token)
                description: See <a href='/api/authentication/#obtaining-an-access-token'>Obtaining an Access Token</a>                
              Accept:
                example: application/json    
            responses:
                200:
                    body:
                        application/json:
                          schema: <<resource>>
        put:
            headers:
              Authorization:
                example: Bearer (Access Token)
                description: See <a href='/api/authentication/#obtaining-an-access-token'>Obtaining an Access Token</a>                
              Accept:
                example: application/json 
              Content-Type:
                example: application/json  
            body:
              application/json:
                schema: <<resourcePost>>
            responses:
                200:
                    body:
                        application/json:
                          schema: <<resource>>
        delete:
            headers:
              Authorization:
                example: Bearer (Access Token)
                description: See <a href='/api/authentication/#obtaining-an-access-token'>Obtaining an Access Token</a>                
              Accept:
                example: application/json 
              Content-Type:
                example: application/json  
            body:
              application/json:
            responses:
                204:    

    - collection:
        securedBy: [oauth_2_0]
        get:
            headers:
              Authorization:
                example: Bearer (Access Token)
                description: See <a href='/api/authentication/#obtaining-an-access-token'>Obtaining an Access Token</a>
              Accept:
                example: application/json    
            responses:
                200:
                    body:
                        application/json:
                          schema: <<resource>>
        post:
            headers:
              Authorization:
                example: Bearer (Access Token)
                description: See <a href='/api/authentication/#obtaining-an-access-token'>Obtaining an Access Token</a>                
              Accept:
                example: application/json 
              Content-Type:
                example: application/json  
            body:
              application/json:
                schema: <<resourcePost>>
            responses:
                200:
                    body:
                        application/json:
                          schema: <<resource>>        
securitySchemes:
    - oauth_2_0:
        description: |
            iQmetrix APIs support OAuth 2.0 for authenticating API requests.
        type: OAuth 2.0
        describedBy:
            headers:
                Authorization:
                    description: |
                       Used to send a valid OAuth 2 access token.
                    type: string
            responses:
                401:
                    description: |
                        Bad or expired token. This can happen if the user or iQmetrix
                        revoked or expired an access token. To fixsorry fo, you should re-
                        authenticate the user.
                403:
                    description: |
                        Bad OAuth request (wrong consumer key, bad nonce, expired
                        timestamp...). Unfortunately, re-authenticating the user won"t help here.
        settings:
          authorizationUri: https://accountsint.iqmetrix.net/v1/oauth2/authorize
          accessTokenUri: https://accountsint.iqmetrix.net/v1/oauth2/tokenn
          authorizationGrants: [ owner ]
schemas:
  - CatalogItem: |
      {
        "name": "CatalogItem",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "description": "Archived CatalogItem resources can still be updated and retrieved individually, but are excluded from search results",
        "properties": {
          "CatalogItemId": { "type": "GUID", "description": "Unique identifier", "example": "a183f1a9-c58f-426a-930a-9a6357db52ed" }, 
          "CatalogSku": { "type": "string", "description": "SKU", "example": "21Z8F4AQ" },          
          "DateAddedUtc": { "type": "datetime", "description": "Date this Product was added to the catalog, in UTC", "example": "2016-08-09T20:12:05.987", "generated": "true" },
          "DateUpdatedUtc": { "type": "datetime", "description": "Date this Product was last updated, in UTC", "example": "2016-08-09T20:12:05.99", "generated": "true" },          
          "IsArchived": { "type": "boolean", "description": "A flag to indicate if this CatalogItem is Archived. When archived, this CatalogItem is excluded from search results", "example": "false" }, 
          "RmsId": { "type": "string",  "description": "Identifier for the CatalogItem in an external inventory system", "example": "1" }, 
          "Slug": { "type": "string",  "description": "Unique identifier for a [Product](#product)", "ref": "catalog.Product.Id" },
          "ExtendedAttributes": { "type": "array", "arrayType": "object", "description": "Attributes", "ref": "catalog.Attribute" },
          "SourceIds": { "type": "array", "arrayType": "GUID", "description": "Reserved for future use", "example": "00000000-0000-0000-0000-000000000000"},
          "BatchTracking": { "type": "boolean", "description": "Reserved for future use", "example": "" },
          "MeasurementType": { "type": "string", "description": "Reserved for future use", "example": "" }
        }
      }
  - CatalogItemSingle: |
      {
        "exclude": "true",
        "name": "CatalogItemSingle",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "CatalogItemId": { "type": "GUID", "description": "Unique identifier", "example": "a183f1a9-c58f-426a-930a-9a6357db52ed" },           
          "CatalogSku": { "type": "string", "description": "SKU", "example": "21Z8F4AQ" },
          "IsArchived": { "type": "boolean", "description": "A flag to indicate if this CatalogItem is Archived. When archived, this CatalogItem is excluded from search results", "example": "false" }, 
          "DateAddedUtc": { "type": "datetime", "description": "Date this Product was added to the catalog, in UTC", "example": "2016-08-09T20:12:05.987", "generated": "true" },
          "DateUpdatedUtc": { "type": "datetime", "description": "Date this Product was last updated, in UTC", "example": "2016-08-09T20:12:05.99", "generated": "true" },
          "RmsId": { "type": "string",  "description": "Identifier for the CatalogItem in an external inventory system", "example": "1" }, 
          "Slug": { "type": "string",  "description": "Unique identifier for a [Product](#product)", "ref": "catalog.Product.Id" },
          "ExtendedAttributes": { "type": "array", "arrayType": "object", "description": "Unvalidated additional properties", "ref": "catalog.Attribute" },            
          "SourceIds": { "type": "array", "arrayType": "GUID", "description": "Reserved for future use", "example": "00000000-0000-0000-0000-000000000000"},
          "BatchTracking": { "type": "boolean", "description": "Reserved for future use", "example": "" },
          "MeasurementType": { "type": "string", "description": "Reserved for future use", "example": "" }
        }
      }      
  - Attribute: |
      {
        "name": "Attribute",
        "type": "array",
        "$schema": "http://json-schema.org/draft-03/schema",
        "description": "Extended attributes are unvalidated extra properties that can be put on a CatalogItem.",
        "properties": {
          "Name": { "type": "string", "size": "250", "description": "Attribute name", "example": "Country of Manufacture" },
          "Value": { "type": "string", "size": "250", "description": "Attribute value", "putDescription": "Defaults to an empty string", "example": "China" }
        },
        "required": [ "Name" ]
      }     
  - CatalogItemArray: |
      {
        "exclude": "true",
        "name": "CatalogItemSingle",
        "type": "array",
        "$schema": "http://json-schema.org/draft-03/schema"
      }      
  - CatalogSearchResult: |
      {
        "name": "CatalogSearchResult",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "description": "A CatalogSearchResult resource is used to return information about Product resources that match a given criteria, defined in the request.",
        "properties": {
          "Items": { "type": "array", "arrayType": "object", "description": "Products matching the search criteria", "ref": "catalog.Item", "isNested": "true" },
          "Facets": { "type": "object", "description": "Summary of Manufacturer and Vendor information for the Items", "ref": "catalog.Facets", "isNested": "true" },
          "MetaData": { "type": "object", "description": "Data representing pagination details", "ref": "catalog.MetaData", "isNested": "true" }
        }
      }
  - Facets: |
      {
        "name": "Facets",        
        "exclude": "true",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "ClassificationAndCategories": { "type": "array", "arrayType": "object", "description": "Count of Classification and Categories in results", "ref": "catalog.ClassificationCount", "isNested": "true" } ,        
          "Manufacturers": { "type": "array", "arrayType": "object", "description": "Manufacturer information for the Items", "ref": "catalog.Manufacturer" }, 
          "Vendors": { "type": "array", "arrayType": "object", "description": "Vendor information for the Items", "ref": "catalog.Manufacturer"  }
        }
      } 
  - ManufacturerRep: |
      {
        "name": "ManufacturerRep",        
        "exclude": "true",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Id": { "type": "integer", "description": "Identifier for the [Manufacturer](/api/entity-store/#manufacturer)", "putDescription": "Identifier for a {{Manufacturer}}", "ref": "entity-store.Manufacturer.Id" }, 
          "Name": { "type": "string",  "description": "Name of the [Manufacturer](/api/entity-store/#manufacturer)", "ref": "entity-store.Manufacturer.Name", "generated": "true" }
        },
        "required": [ "Id" ]
      }      
  - VendorRep: |
      {
        "name": "VendorRep",        
        "exclude": "true",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Id": { "type": "integer", "description": "Identifier for the [Supplier](/api/entity-store/#supplier)", "ref": "entity-store.Supplier.Id" }, 
          "Name": { "type": "string",  "description": "Name of the [Supplier](/api/entity-store/#supplier)", "ref": "entity-store.Supplier.Name" }
        }
      }         
  - Manufacturer: |
      {
        "name": "Manufacturer",        
        "exclude": "true",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Count": { "type": "integer", "description": "Number of Items", "example": "1" }, 
          "Item": { "type": "object", "description": "Information about this [Manufacturer](/api/entity-store/#manufacturer)", "ref": "catalog.ManufacturerRep" }
        }
      }           
  - MetaData: |
      {
        "exclude": "true",        
        "name": "MetaData",        
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Page": { "type": "integer", "description": "Page of Items to be included in the resource", "example": "1" }, 
          "PageSize": { "type": "integer", "description": "Number of Items included in the resource", "example": "20" }, 
          "TotalResults": { "type": "integer", "description": "Number of Items matching the search criteria", "example": "5" }
        }
      }      
  - ClassificationCount: |
      {
        "name": "ClassificationCount",        
        "exclude": "true",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Count": { "type": "integer", "description": "Number of items in the response with the Classification or Category specified in Item", "example": "1" }, 
          "Item": { "type": "integer", "description": "Identifier of a Classification or Category", "ref": "classification-tree.Classification.Id" }
        }
      }      
  - SearchResult: |
      {
        "exclude": "true",        
        "name": "SearchResult",        
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Items": { "type": "array", "arrayType": "object", "ref": "catalog.CatalogItemSingle" }
        }
      }  
  - ArrayItem: |
      {
        "name": "ArrayItem",
        "exclude": "true",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Name": { "type": "string", "example": "JBL Pulse" },
          "Slug": { "type": "string", "example": "M45" },
          "CatalogItemId": { "type": "GUID", "example": "a183f1a9-c58f-426a-930a-9a6357db52ed" }, 
          "CatalogSku": { "type": "string", "example": "F4VPWWTG" },
          "HeroShotId": { "type": "GUID", "example": "8402481f-da22-4081-900b-dbcf9c27490d" },
          "Manufacturer": { "type": "object", "description": "[Manufacturer](/api/entity-store/#manufacturer) information for the Product", "ref": "catalog.ManufacturerRep", "isNested": "true" }, 
          "ShortDescription": { "type": "string", "description": "Short Description", "example": "Next is Now" },
          "CanonicalClassification": { "type": "object", "description": "ClassificationTree details", "ref": "catalog.CanonicalClassification" }
        }
      }
  - VariationArrayItem: |
      {
        "name": "VariationArrayItem",
        "exclude": "true",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Name": { "type": "string", "example": "JBL Pulse" },
          "Slug": { "type": "string", "example": "M45" },
          "CatalogItemId": { "type": "GUID", "example": "a183f1a9-c58f-426a-930a-9a6357db52ed" }, 
          "Revisions": { "type": "array", "arrayType": "object", "ref": "catalog.Revision" }          
        }
      }      
  - CompatbileSearchResult: |
      {
        "exclude": "true",
        "name": "CompatbileSearchResult",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Items": { "type": "array", "arrayType": "object", "ref": "catalog.ArrayItem" },
          "Facets": { "type": "array", "arrayType": "object", "ref": "catalog.Facets" }
        }
      } 
  - SourceSearchResult: |
      {
        "exclude": "true",
        "name": "SourceSearchResult",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Items": { "type": "array", "arrayType": "object", "ref": "catalog.CatalogItem" }
        }
      }       
  - VendorSkuResult: |
      {
        "exclude": "true",
        "name": "VendorSkuResult",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Sku": { "type": "string", "description": "Vendor Sku specified in the URI", "example": "408853"},
          "VendorId": { "type": "integer", "description": "Vendor Id specified in the URI", "example": "1217"},
          "Items": { "type": "array", "arrayType": "object", "ref": "catalog.CatalogItemSingle" }        
        }
      }  
  - VariationResults: |
      {
        "name": "VariationResults",
        "exclude": "true",        
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Items": { "type": "array", "arrayType": "object", "ref": "catalog.VariationArrayItem" }
        }
      } 
  - Revision: |
      {
        "name": "Revision",
        "exclude": "true",        
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Name": { "type": "string", "example": "Galaxy S6 edge+ 32GB - Black Sapphir" },
          "Slug": { "type": "string", "example": "M1248-V1-E38" },
          "CatalogItemId": { "type": "GUID", "example": "c8f9cd4f-6889-4791-88ea-df2ada72e4ee" }
        }
      }  
  - Product: |
      {
        "name": "Product",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Id": { "type": "string",  "description": "Identifier", "example": "M1248-V1" }, 
          "Name": { "type": "string", "description": "Name", "example": "Galaxy S6 edge+ 32GB - Black Sapphire" }, 
          "Assets": { "type": "array", "arrayType": "object", "description": "Asset information", "ref": "catalog.Asset" }, 
          "CanonicalClassification": { "type": "object", "description": "ClassificationTree details", "ref": "catalog.CanonicalClassification" }, 
          "ColorDefinition": { "type": "object", "description": "Information about the color of the Product", "ref": "catalog.ColorDefinition" }, 
          "DateAddedUtc": { "type": "datetime", "description": "Date this Product was added to the catalog, in UTC", "example": "2016-08-09T20:12:05.987", "generated": "true" },
          "DateUpdatedUtc": { "type": "datetime", "description": "Date this Product was last updated, in UTC", "example": "2016-08-09T20:12:05.99", "generated": "true" },
          "Entity": { "type": "object", "description": "Entity information, used for Entity revisions", "ref": "catalog.Entity", "isNested": "true"}, 
          "ExtendedAttributes": { "type": "array", "arrayType": "object", "description": "Attributes", "ref": "catalog.Attribute" },
          "HeroShotId": { "type": "GUID", "description": "[Hero Shot](/api/glossary/#hero-shot) identifier", "example": "44f60963-5515-44bc-9509-71aef6463580" }, 
          "HeroShotUri": { "type": "string", "description": "URI to a Hero Shot Asset", "example": "https://imagehost/images/44f60963-5515-44bc-9509-71aef6463580" }, 
          "IsArchived": { "type": "boolean", "description": "A flag to indicate if this Product is archived",  "example": "false" },
          "IsLinkedToCuratedProduct": { "type": "boolean", "description": "A flag to indicate if this version of this Product is publicly accessible (true), or private (false)", "example": "true" }, 
          "IsSaleable": { "type": "boolean", "description": "A flag to indicate if this product can be sold", "example": "true" }, 
          "LongDescription": { "type": "string", "description": "Long Description", "example": "The world’s first dual-edge display was born from a need to create something new..." }, 
          "Manufacturer": { "type": "object", "description": "[Manufacturer](/api/entity-store/#manufacturer) information for the Product", "ref": "catalog.ManufacturerRep", "isNested": "true" }, 
          "ManufacturerSkus": { "type": "array", "arrayType": "object", "description": "Manufacturer SKUs", "ref": "catalog.Sku" }, 
          "MasterProductId": { "type": "integer", "description": "Identifier for the [Master Product](/api/product-structure/#masterproduct)", "example": "1248" }, 
          "MSRP": { "type": "object", "description": "Manufacturers suggested retail price information", "ref": "catalog.MSRP", "isNested": "true" }, 
          "Owner": { "type": "object", "description": "Owner information used to designate if this is a public product (null) or private (not-null)", "ref": "catalog.Owner", "isNested": "true" }, 
          "Region": { "type": "object", "description": "Region information, for Regional Carrier Revisions", "ref": "catalog.Region" }, 
          "ReleaseDate": { "type": "DateTime", "description": "Release Date, in UTC", "example": "2011-10-14T12:00:00.000" }, 
          "RmsId": { "type": "string",  "putDescription": "Identifier for the CatalogItem in an external inventory system", "example": "1" },        
          "ShortDescription": { "type": "string", "description": "Short Description", "example": "Next is Now" },
          "Specifications": { "type": "array", "arrayType": "object", "description": "Details such as color, dimension, etc", "ref": "catalog.Specification", "isNested": "true"}, 
          "UpcCodes": { "type": "array", "arrayType": "object", "description": "UPC codes", "ref": "catalog.UpcCode", "isNested": "true" }, 
          "VariationId": { "type": "integer", "description": "Identifier for the Variation", "example": "1" }, 
          "VariationInfo": { "type": "array", "arrayType": "object", "description": "[Variation](/concepts/product-structure/#variations) information for the Product", "ref": "catalog.VariationInformation"},
          "VendorSkus": { "type": "array", "arrayType": "object", "description": "Vendor SKUs", "ref": "catalog.Sku" }, 
          "Version": { "type": "integer", "description": "Latest revision number", "example": "1" }
        }
      }
  - CanonicalClassification: |
      {
        "name": "CanonicalClassification",        
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Id": { "type": "integer", "description": "Identifier for the [Classification](/api/classification-tree/#classification) or [Category](/api/classification-tree/#category)", "ref": "classification-tree.Classification.Id" }, 
          "Name": { "type": "string",  "description": "Name of the Classification/Category", "ref": "classification-tree.Classification.Name" }, 
          "ParentCategories": { "type": "array", "arrayType": "object", "description": "List of Parent Categories", "ref": "catalog.ParentCategory", "isNested": "true"},
          "TreeId": { "type": "integer", "description": "Identifier for the {{ClassificationTree}}", "ref": "classification-tree.ClassificationTree.Id" }
        }
      }
  - Classification: |
      {
        "name": "Classification",
        "exclude": "true",    
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Id": { "type": "integer", "description": "Identifier for the [Classification](/api/classification-tree/#classification) or [Category](/api/classification-tree/#category)", "ref": "classification-tree.Classification.Id" }, 
          "Name": { "type": "string",  "description": "Name of the Classification/Category", "ref": "classification-tree.Classification.Name" }, 
          "ParentCategories": { "type": "array", "arrayType": "object", "description": "List of Parent Categories", "ref": "catalog.ParentCategory", "isNested": "true"}
        }
      }      
  - ColorDefinition: |
      {
        "name": "ColorDefinition",
        "description": "A ColorDefinition allows you to define the available Colors for a Product",        
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Id": { "type": "GUID", "description": "Unique identifier", "example": "5c6e2779-79d1-4fbd-b6a8-36b81e851b15", "generated": "true"}, 
          "Name": { "type": "string",  "description": "Name", "example": "Black Sapphire" }, 
          "ColorTagIds": { "type": "array", "array": "integer", "description": "List of [ColorTag](/api/product-structure/#colortag) Identifiers", "putDescription": "List of ColorTag Identifiers, see <a href='/api/product-structure/#getting-all-color-tags'>Getting All Color Tags</a> for a list", "example": "1" },
          "ColorTags": { "type": "array", "arrayType": "object", "description": "Color information", "ref": "catalog.ColorTag", "isNested": "true", "generated": "true" },
          "Swatch": { "type": "object", "description": "An icon to display on a screen next to a color showing the actual color of the product. Can be provided as an image Asset or hex code", "ref": "catalog.Swatch" }          
        },
        "required": [ "Name" ]
      }
  - ColorDefinitionItem: |
      {
        "name": "ColorDefinitionItem",
        "exclude": "true",
        "description": "A ColorDefinition allows you to define the available Colors for a Product",        
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Id": { "type": "GUID", "description": "Unique identifier", "example": "5c6e2779-79d1-4fbd-b6a8-36b81e851b15", "generated": "true"}, 
          "Name": { "type": "string",  "description": "Name", "example": "Black Sapphire" }, 
          "ColorTags": { "type": "array", "arrayType": "object", "description": "Color information", "ref": "catalog.ColorTag", "isNested": "true", "generated": "true" },
          "Swatch": { "type": "object", "description": "An icon to display on a screen next to a color showing the actual color of the product. Can be provided as an image Asset or hex code", "ref": "catalog.Swatch" }          
        }
      }      
  - ColorTag: |
      {
        "name": "ColorTag",
        "exclude": "true",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Id": { "type": "integer", "description": "Identifier", "putDescription": "Identifier of a {{ColorTag}}, see <a href='#getting-all-color-tags'>Getting All Color Tags</a> for a list", "example": "1" }, 
          "Name": { "type": "string",  "description": "Name", "example": "Black", "generated": "true" }, 
          "ColorCode": { "type": "string", "description": "A valid Hex code representing this color", "example": "#303232", "generated": "true" }
        },
        "required": [ "Id" ]
      }
  - Swatch: |
      {
        "name": "Swatch",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Type": { "type": "string", "description": "Acceptable values are Asset, ColorCodes or Empty", "putDescription": "Acceptable values are Asset, ColorCodes or Empty", "example": "ColorCode"}, 
          "AssetId": { "type": "GUID", "description": "If Type is Asset, an identifier for an Asset. Otherwise, this property is ignored","putDescription": "If Type is Asset, an identifier for an Asset. Otherwise, this property is ignored", "example": "7443d13e-dc14-4b30-833b-2919d765964e", "example": "null" },
          "ColorCode": { "type": "string", "description": "If Type is ColorCode, a valid hex code for a color. Otherwise, this propety is ignored", "putDescription": "If Type is ColorCode, a valid hex code for a color. Otherwise, this propety is ignored", "example": "#C0C8D0" }          
        }
      }
  - Asset: |
      {
        "name": "Asset",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Id": { "type": "GUID", "description": "Unique identifier", "example": "732130d2-b673-461c-812b-f2b614d6076e", "generated": "true" }, 
          "Name": { "type": "string",  "description": "File name", "example": "iqmetrix.jpg" }, 
          "Uri": { "type": "string",  "description": "URL that points to an actual file where the digital asset is stored", "example": "https://amsdemostorage.blob.core.windows.net/assets/732130d2-b673-461c-812b-f2b614d6076e.jpg" }, 
          "Type": { "type": "string", "description": "Type of asset", "example": "Image" },
          "IsHidden": { "type": "boolean", "description": "A flag to indicate that this Asset exists on the product but should not be seen on a UI", "example": "true" }          
        }
      }       
  - Sku: |
      {
        "name": "Sku",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Value": { "type": "string", "description":"Value", "example": "JBLPULSEBLKAM"}, 
          "Description": { "type": "string", "description":"Description","example": "" },
          "Entity": { "type": "object", "description":"Identifier for an Entity this SKU is associated with", "ref": "catalog.Entity", "isNested": "true"}
        }
      }      
  - Region: |
      {
        "name": "Region",      
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "CountryCode": { "type": "string", "description": "Country in which this address resides. Uses the ISO 3166-1 alpha-2 standard. For a list of acceptable codes, see <a href='/api/reference/#getting-all-countries'>Getting All Countries</a>", "ref": "reference.Country.Code" },
          "CountryName": { "type": "string", "description": "Country name", "example": "Canada", "generated": "true" },
          "StateCode": { "type": "string", "description": "Code for the State in which this address resides. Based off the ISO 3166-2 standard. For a list of acceptable codes, see <a href='/api/reference/#getting-all-countries'>Getting All Countries</a>", "ref": "reference.State.Code" },
          "StateName": { "type": "string", "description": "State name", "example": "British Columbia", "generated": "true" }
        }
      }     
  - Field: |
      {
        "exclude": "true",
        "name": "Field",   
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Id": { "type": "integer", "description": "Identifier", "example": "54" }, 
          "Name": { "type": "string", "description": "Name", "example": "Height" },
          "DisplayName": { "type": "string",  "description": "Value to be displayed in the UI", "example": "Height" }, 
          "StringId": { "type": "string",  "description": "Consistent identifier across all [Environments](/#environments)", "example": "Height" }, 
          "Type": { "type": "string",  "description": "Data type", "example": "Float" }, 
          "Unit": { "type": "string", "description": "Unit this Field uses", "example": "inches" }, 
          "Value": { "type": "string", "description": "Value to be used for this Field", "example": "6.08" }          
        }
      }              
  - VariationInformation: |
      {
        "name": "VariationInformation",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "VariationId": { "type": "integer", "description": "Identifier for a Variation", "example": "1" }, 
          "Slug": { "type": "string", "description": "Identifier for the Variation", "example": "M1248-V1" }, 
          "Fields": { "type": "array", "arrayType": "object", "description": "Fields which describe how the Variation differs from its parent", "ref":"catalog.SpecificationField", "isNested": "true" }
        }
      }
  - Item: | 
      {
        "name": "Item",        
        "exclude": "true",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Name": { "type": "string", "description": "Name", "example": "Galaxy S6 edge+ 32GB - Black Sapphire" }, 
          "CanonicalClassification": { "type": "object", "description": "ClassificationTree details", "ref": "catalog.Classification", "isNested": "true" }, 
          "CatalogItemId": { "type": "GUID", "description": "Unique identifier for the CatalogItem", "ref": "catalog.CatalogItem.CatalogItemId" }, 
          "CatalogSku": { "type": "string", "description": "SKU", "example": "21Z8F4AQ" },          
          "ClassificationTreeId": { "type": "integer", "description": "Identifier for the [ClassificationTree](/api/classification-tree/#classificationtree)", "ref": "classification-tree.ClassificationTree.Id" }, 
          "ColorDefinition": { "type": "object", "description": "Information about the color of the Product", "ref": "catalog.ColorDefinitionItem", "hideFromExample":"true", "isNested": "true"},
          "CompanyId": { "type": "integer", "description": "Identifier for the Company", "ref": "company tree.Company.Id" }, 
          "DateAddedUtc": { "type": "DateTime", "description": "Date this Product was added to the catalog, in UTC", "example": "2011-10-14T12:00:00.000" }, 
          "HeroShotId": { "type": "GUID", "description": "[Hero Shot](/api/glossary/#hero-shot) identifier", "example": "44f60963-5515-44bc-9509-71aef6463580" }, 
          "Identifiers": { "type": "array", "arrayType": "object", "description": "Identifiers", "ref": "catalog.Identifier", "stopNest": "true" },
          "IsLinkedToCuratedProduct": { "type": "boolean", "description": "A flag to indicate if this version of this Product is publicly accessible (true), or private (false)", "example": "true" }, 
          "IsDropShippable": { "type": "boolean", "description": "A flag to indicate if this Product can be shipped. This value is a best guess and should not be used for tracking dropshippable products", "example": "true" }, 
          "IsMasterProduct": { "type": "boolean", "description": "A flag to indicate if this is a Master Product", "example": "false" }, 
          "Manufacturer": { "type": "object", "description": "[Manufacturer](/api/entity-store/#manufacturer) information for the Product", "ref": "catalog.ManufacturerRep", "isNested": "true" }, 
          "Msrp": { "type": "object", "description": "Manufacturer suggested retail price information for the Product", "ref": "catalog.MSRP", "isNested": "true" }, 
          "ProductVersion": { "type": "integer", "description": "Latest revision number", "example": "1" }, 
          "ShortDescription": { "type": "string", "description": "Short Description", "example": "Next is Now" },
          "Slug": { "type": "string",  "description": "URL friendly identifier for the Product", "ref": "catalog.Product.Id" }, 
          "VariationId": { "type": "integer", "description": "Identifier for the [Variation](/concepts/product-structure/#Variations) this Product represents", "example": "1" }, 
          "Vendors": { "type": "array", "arrayType": "object", "description": "Vendors for the Product", "ref": "catalog.VendorRep", "isNested": "true" }
        }
      } 
  - Identifier: |
      {
        "name": "Identifier",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Sku": { "type": "string", "description": "Sku", "example": "EM-JE040-RA"},
          "SkuType": { "type": "string", "description": "A string to indicate the type of Entity this Identifier is for. Acceptable values are: ManufacturerSku, VendorSku or UPC", "example": "ManufacturerSku" },
          "Entity": { "type": "object", "description": "Entity information for this Identifier", "ref": "catalog.Entity", "isNested": "true"}, 
          "Description": { "type": "string", "description": "Description", "example": "Manufacturer SKU"}
        }
      } 
  - SpecificationField: |
      {
        "name": "Field",   
        "exclude": "true",     
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "FieldId": { "type": "integer", "description": "Identifier for a [FieldDefinition](/api/field-definitions/#fielddefinition)", "ref": "field-definitions.FieldDefinition.Id" }, 
          "Name": { "type": "string", "description": "Name", "ref": "field-definitions.FieldDefinition.StringId" },
          "Value": { "type": "string", "description": "Value to be used for this Field", "example": "true" }          
        }
      }  
  - Owner: |
      {
        "name": "Owner",
        "exclude": "true",        
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Id": { "type": "integer", "description": "For private products, Identifier of the Company that owns this Product", "ref":"company tree.Company.Id", "generated": "true" }, 
          "Name": { "type": "string", "description": "For private products, Name of the Company that owns this Product", "ref":"company tree.Company.Name", "generated": "true" }
        }
      }
  - ParentCategory: |
      {
        "name": "ParentCategory",
        "exclude": "true",        
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Id": { "type": "integer", "description": "Identifier", "ref": "classification-tree.Category.Id" }, 
          "Name": { "type": "string",  "description": "Name", "ref": "classification-tree.Category.Name" }
        }
      }   
  - UpcCode: |
      {
        "exclude": "true",
        "name": "UpcCode",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Value": { "type": "string", "description": "Name", "example": "874688002478/16W" }, 
          "Description": { "type": "string", "description": "Description", "example": "UPC" }, 
          "Entity": { "type": "integer", "description": "Identifier of an Entity associated with this UPC code", "example": "2" }
        }
      }
  - Specification: |
      {
        "exclude": "true",
        "name": "Specification",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Name": { "type": "string", "description": "Name", "example": "Color" }, 
          "Fields": { "type": "array", "description": "Group of ProductFields", "ref": "catalog.Field" }
        }
      }
  - Entity: |
      {
        "exclude": "true",
        "name": "Entity",      
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Id": { "type": "integer", "description": "Identifier of an Entity used for Entity Revisions. See [Carrier Revisions](/concepts/product-structure/#carrier-revisions) for more information", "putDescription": "Identifier of an Entity used for Entity Revisions. See <a href='/concepts/product-structure/#carrier-revisions'>Carrier Revisions</a> for more information", "ref": "company tree.Company.Id" },
          "Name": { "type": "string", "description": "Entity name", "ref": "company tree.Company.Name", "generated": "true"  }
        },
        "required": [ "Id" ]
      }  
  - MSRP: |
      {
        "exclude": "true",
        "name": "MSRP",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Amount": { "type": "decimal", "description": "Manufacturers suggested retail price", "example": "100" },
          "CurrencyCode": { "type": "string", "description": "Currency. For a list of acceptable values, see <a href='/api/reference/#getting-all-currencies'>Getting All Currencies</a>", "ref": "reference.Currency.Code" }    
        }
      }     
  - CatalogAdd: |
      {
        "exclude": "true",
        "name": "CatalogAdd",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "Slug": { "type": "string", "putDescription": "Unique identifier for a Product in Product Library", "ref": "catalog.Product.Id" },
          "RmsId": { "type": "string",  "putDescription": "Identifier for the CatalogItem in an external inventory system", "example": "1" }
        },
        "required": [ "Slug" ]
      }
  - GetBulkRequest: |
      {
        "exclude": "true",
        "name": "GetBulkRequest",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
          "CatalogItemIds": { "type": "array", "arrayType": "string", "putDescription": "Array of {{CatalogItem}} identifiers", "example": "21ac987c-d55a-482a-9450-402976a71563" } 
        },
        "required": [ "CatalogItemIds" ]
      }   
  - ProductDetailsBulkResponse: |
      {
        "exclude": "true",
        "name": "ProductDetailsBulkResponse",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
            "CatalogItems": { "type": "array", "arrayType": "object", "ref": "catalog.ProductDetailsBulkResponseObj", "putDescription": "JSON object/Dictionary" }
        }
      }  
  - ProductDetailsBulkResponseObj: |
      {
        "exclude": "true",
        "name": "ProductDetailsBulkResponseObj",
        "type": "object",
        "$schema": "http://json-schema.org/draft-03/schema",
        "properties": {
            "{CatalogItemId}": { "type": "object", "description": "In the response this value will be a CatalogItem", "ref": "catalog.Product", "stopPrint": "true" }
        }
      }                
/Companies({CompanyId})/Catalog/Items:
  uriParameters:
    CompanyId:
      displayName: CompanyId
      type: integer
      example: 14146
      description: Identifier for the {{Company}}
      required: true
  type:
    collectionReadOnly:
      resource: CatalogItemArray
  get: 
    displayName: Getting All Catalog Items
/Companies({CompanyId})/Catalog/Items/:
  uriParameters:
    CompanyId:
      displayName: CompanyId
      type: integer
      example: 14146
      description: Identifier for the {{Company}}
      required: true
  type:
    collectionWriteOnly:
      resource: CatalogItemSingle
      resourcePost: CatalogAdd
  post:
    displayName: Adding a Catalog Item from Product Library
/Companies({CompanyId})/Catalog/Items(SourceId={SubscriptionListId}):
  uriParameters:
    CompanyId:
      displayName: CompanyId
      type: integer
      example: 14146
      description: Identifier for the {{Company}}
      required: true
    SubscriptionListId:
      type: string
      example: 43d92a51-650e-4b85-b5d0-8d51bf4c59f4
      description: Identifier for the {{Subscription}} List
      required: true
  type:
    collectionReadOnly:
      resource: SourceSearchResult
  get:
    displayName: Getting Catalog Items By Subscription List 
/Companies({CompanyId})/Catalog/Items({CatalogItemId})/attributes:
  uriParameters:
    CompanyId:
      displayName: CompanyId
      type: integer
      example: 14146
      description: Identifier for the {{Company}}
      required: true
    CatalogItemId:
      displayName: CatalogItemId
      type: string
      example: a183f1a9-c58f-426a-930a-9a6357db52ed
      description: Unique identifier for the {{CatalogItem}}
      required: true
  type:
    singularEndpointGetPutDelete:
      resource: Attribute
      resourcePost: Attribute
  get:
    displayName: Getting Extended Attributes for a Catalog Item
    description: |
      Extended attributes are unvalidated extra properties that can be put on a CatalogItem. They consist of a unique string key and a string value with a max-length of 250 characters.
  put:
    displayName: Adding or Updating Extended Attributes for a Catalog Item
    description: |
      This request returns <strong>all</strong> Attributes for a Catalog Item, not just ones that were added or updated.

      It is possible to upsert multiple attributes in a single call.

      If an attribute with the given name already exists, it will be overwritten with the new value. Otherwise, it will be added to the CatalogItem.
  delete:
    displayName: Removing Extended Attributes from a Catalog Item
    description: |
      This request allows you to remove extended attributes from a Catalog Item. The request body is an array of strings, where each string is the name of an attribute to be removed.

      Request is idempotent. Deleting an attribute that doesn't exist on a catalog item is a no-op. 
    body:
      application/json:
        example: |
          [
            "Cases Per Layer"
          ]
/Companies({CompanyId})/Catalog/Items({CatalogItemId})/ProductDetails:
  uriParameters:
    CompanyId:
      displayName: CompanyId
      type: integer
      example: 14146
      description: Identifier for the {{Company}}
      required: true
    CatalogItemId:
      displayName: CatalogItemId
      type: string
      example: a183f1a9-c58f-426a-930a-9a6357db52ed
      description: Unique identifier for the {{CatalogItem}}
      required: true
  type:
    collectionReadOnly:
      resource: Product
  get:
    displayName: Getting Product Details
/Companies({CompanyId})/Catalog/Items/ProductDetails/Bulk:
  uriParameters:
    CompanyId:
      displayName: CompanyId
      type: integer
      example: 14146
      description: Identifier for the {{Company}}
      required: true
  type:
    collectionWriteOnly:
      resourcePost: GetBulkRequest
      resource: ProductDetailsBulkResponse
  post:
    displayName: Getting Many Product Details At Once
    description: |
      This request returns a dictionary of CatalogItemIds and Product Details for the CatalogItem.

      This request will return HTTP 400 if less than 1 or more than 500 product details are requested at one time.

      If a requested CatalogItemId is not found, it will be omitted from the response.
    body:
      application/json:
        example: |
          {
            "CatalogItemIds" : [
              "21ac987c-d55a-482a-9450-402976a71563",
              "402976a7-482a-d55a-1563-21ac987c9450"
            ]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "CatalogItems": {
                      "21ac987c-d55a-482a-9450-402976a71563": {
                          "Id": "M3-V1",
                          "Name": "iPhone 4S 16GB White",
                          "Assets": [],
                          "CanonicalClassification": {
                              "TreeId": 1,
                              "Id": 5,
                              "Name": "Smartphones",
                              "ParentCategories": [
                                  {
                                      "Id": 2,
                                      "Name": "Cellular & Accessories"
                                  }
                              ]
                          },
                          "ColorDefinition": {
                              "Id": "5c6e2779-79d1-4fbd-b6a8-36b81e851b15",
                              "Name": "Black Sapphire",
                              "ColorTagIds": [
                                  1
                              ],
                              "ColorTags": [
                                  {
                                      "Id": 1,
                                      "Name": "Black",
                                      "ColorCode": "#303232"
                                  }
                              ],
                              "Swatch": {
                                  "Type": "ColorCode",
                                  "AssetId": "null",
                                  "ColorCode": "#C0C8D0"
                              }
                          },     
                          "DateAddedUtc": "2016-08-09T20:12:05.987",
                          "DateUpdatedUtc": "2016-08-09T20:12:05.99"                                   
                          "Entity": null,
                          "ExtendedAttributes": [
                              {
                                "Name": "Country of Manufacture", 
                                "Value": "Indonesia"
                              }
                          ]
                          "HeroShotId": null,
                          "HeroShotUri": null,
                          "IsLinkedToCuratedProduct": true,
                          "IsSaleable": true,
                          "LongDescription": "The iPhone 4S is a gradual step over the iPhone 4 improving the internals, but keeping the look and feel.",
                          "Manufacturer": {
                              "Id": 8793,
                              "Name": "Apple"
                          },
                          "ManufacturerSkus": [
                              {
                                  "Value": "IPM-247-BL-16W",
                                  "Description": "",
                                  "Entity": null
                              }
                          ],
                          "MasterProductId": 3,                          
                          "MSRP": {
                              "Amount": 790,
                              "CurrencyCode": "USD"
                          },
                          "Owner": null,
                          "Region": null,
                          "ReleaseDate": null,
                          "ShortDescription": "Better than iPhone 3G",
                          "Specifications": [
                              {
                                  "Name": "Color",
                                  "Fields": [
                                      {
                                          "Id": 10,
                                          "StringId": "Color",
                                          "DisplayName": "Color",
                                          "Name": "Color",
                                          "Value": "White",
                                          "Type": "TextSingleLine",
                                          "Unit": null
                                      }
                                  ]
                              }
                          ],
                          "UpcCodes": [
                              {
                                  "Value": "874688002478/16W",
                                  "Description": "",
                                  "Entity": null
                              }
                          ],
                          "VariationId": 1,
                          "VariationInfo": [
                              {
                                  "VariationId": 1,
                                  "Slug": "M3-V1",
                                  "Fields": [
                                      {
                                          "FieldId": 1,
                                          "Name": "Product Name",
                                          "Value": "iPhone 4S 16GB White"
                                      }
                                  ]
                              }
                          ],                          
                          "VendorSkus": [
                              {
                                  "Value": "403405_16W",
                                  "Description": "",
                                  "Entity": null
                              }
                          ],
                          "Version": 17
                      },
                      "402976a7-482a-d55a-1563-21ac987c9450" : {
                          ...
                      }
                  }
              }
/Companies({CompanyId})/Catalog/Items({CatalogItemId})/Compatible:
  uriParameters:
    CompanyId:
      displayName: CompanyId
      type: integer
      example: 14146
      description: Identifier for the {{Company}}
      required: true
    CatalogItemId:
      displayName: CatalogItemId
      type: string
      example: a183f1a9-c58f-426a-930a-9a6357db52ed
      description: Unique identifier for the {{CatalogItem}}
      required: true
  type:
    collectionReadOnly:
      resource: CompatbileSearchResult
  get: 
    displayName: Getting Compatible Products for a Catalog Item
/Companies({CompanyId})/Catalog/Items({CatalogItemId})/Variations:
  uriParameters:
    CompanyId:
      displayName: CompanyId
      type: integer
      example: 14146
      description: Identifier for the {{Company}}
      required: true
    CatalogItemId:
      displayName: CatalogItemId
      type: string
      example: a183f1a9-c58f-426a-930a-9a6357db52ed
      description: Unique identifier for the {{CatalogItem}}
      required: true
  type:
    collectionReadOnly:
      resource: VariationResults
  get:
    displayName: Getting Variations for a Catalog Item
    description: |
      For more information about Variations, see <a href='/concepts/product-structure/#variations'>Variations</a>
/Companies({CompanyId})/Catalog/Items/ByVendorSku?vendorsku={VendorSku}&vendorid={VendorId}:
  uriParameters:
    CompanyId:
      displayName: CompanyId
      type: integer
      example: 14146
      description: Identifier for the {{Company}}
      required: true
    VendorSku:
      displayName: VendorSku
      type: string
      example: 408853
      description: Vendor SKU to search for
      required: true      
    VendorId:
      displayName: VendorId
      type: integer
      example: 1217
      description: Identifier for a {{Vendor}} to search for
      required: false
  type:
    collectionReadOnly:
      resource: VendorSkuResult
  get:
    displayName: Getting Products by Vendor SKU      
/Companies({CompanyId})/Catalog/Search?CategoryOrClassificationId={CategoryOrClassificationId}&Page={Page}&PageSize={PageSize}:
  uriParameters:
    CompanyId:
      displayName: CompanyId
      type: integer
      example: 14146
      description: Identifier for the {{Company}}
      required: true
    CategoryOrClassificationId:
      displayName: CategoryOrClassificationId
      type: string
      example: 1
      description: Identifier for the {{Category}} or {{Classification}}
      required: false
    Page:
      displayName: Page
      type: string
      example: 1
      description: Page to display, if not specified defaults to 1
      required: false
    PageSize:
      displayName: PageSize
      type: string
      example: 10
      description: Number of results that will be returned, if not specified defaults to 20
      required: false
  type:
    collectionReadOnly:
      resource: CatalogSearchResult
  get: 
    displayName: Getting Products by Category or Classification
/Companies({CompanyId})/Catalog/Search?ManufacturerIds={ManufacturerIds}&Page={Page}&PageSize={PageSize}:
  uriParameters:
    CompanyId:
      displayName: CompanyId
      type: integer
      example: 14146
      description: Identifier for the {{Company}}
      required: true
    ManufacturerIds:
      displayName: ManufacturerIds
      type: string
      example: 10540
      description: Array of integers representing identifiers for {{Manufacturers}}
      required: false
    Page:
      displayName: Page
      type: string
      example: 1
      description: Page to display, if not specified defaults to 1
      required: false
    PageSize:
      displayName: PageSize
      type: string
      example: 10
      description: Number of results that will be returned, if not specified defaults to 20
      required: false
  type:
    collectionReadOnly:
      resource: CatalogSearchResult
  get: 
    displayName: Getting Products by Manufacturer
/Companies({CompanyId})/Catalog/Search?VendorIds={VendorIds}&Page={Page}&PageSize={PageSize}:
  uriParameters:
    CompanyId:
      displayName: CompanyId
      type: integer
      example: 14146
      description: Identifier for the {{Company}}
      required: true
    VendorIds:
      displayName: VendorIds
      type: string
      example: 1217
      description: List of comma seperated integers representing Supplier identifiers
      required: false
    Page:
      displayName: Page
      type: string
      example: 1
      description: Page to display, if not specified defaults to 1
      required: false
    PageSize:
      displayName: PageSize
      type: string
      example: 10
      description: Number of results that will be returned, if not specified defaults to 20
      required: false
  type:
    collectionReadOnly:
      resource: CatalogSearchResult
  get: 
    displayName: Getting Products by Supplier
/Companies({CompanyId})/Catalog/Search?IsDropshippable={IsDropShippable}&Page={Page}&PageSize={PageSize}:
  uriParameters:
    CompanyId:
      displayName: CompanyId
      type: integer
      example: 14146
      description: Identifier for the {{Company}}
      required: true
    IsDropShippable:
      displayName: IsDropshippable
      type: string
      example: true
      description: True to display products available for shipping, false to display products not available for shipping. This value is a best guess and should not be used for tracking dropshippable products
      required: false
    Page:
      displayName: Page
      type: string
      example: 1
      description: Page to display, if not specified defaults to 1
      required: false
    PageSize:
      displayName: PageSize
      type: string
      example: 10
      description: Number of results that will be returned, if not specified defaults to 20
      required: false
  type:
    collectionReadOnly:
      resource: CatalogSearchResult
  get: 
    displayName: Getting Products Available for Shipping
/Companies({CompanyId})/Catalog/Search?SearchTerms={SearchTerms}&OrderBy={OrderBy}&OrderDir={OrderDir}&Page={Page}&PageSize={PageSize}:
  uriParameters:
    CompanyId:
      displayName: CompanyId
      type: integer
      example: 14146
      description: Identifier for the {{Company}}
      required: true
    SearchTerms:
      displayName: SearchTerms
      type: string
      example: iPhone
      description: Search terms
      required: false
    OrderBy:
      displayName: OrderBy
      type: string
      example: name
      description: A string value representing which field to order the results by. Acceptable values are name or dateAdded. Defaults to name if not specified
      required: false
    OrderDir:
      displayName: OrderDir
      type: string
      example: asc
      description: A string value representing the sort direction. Acceptable values are asc and desc. Defaults to asc if not specified
      required: false
    Page:
      displayName: Page
      type: string
      example: 1
      description: Page to display, if not specified defaults to 1
      required: false
    PageSize:
      displayName: PageSize
      type: string
      example: 10
      description: Number of results that will be returned, if not specified defaults to 20
      required: false
  type:
    collectionReadOnly:
      resource: CatalogSearchResult
  get: 
    displayName: Searching For Products
    description: |
        {{note}}
        SearchTerms specified in the URI are compared against the following Product fields: <code>Name</code>, <code>Manufacturer.Name</code>, <code>ManufacturerSkus</code>, <code>UpcCodes</code> and <code>VendorSkus</code> and may return *partial* results.
        {{end}}    
/Companies({CompanyId})/Catalog/Search?VendorIds={VendorIds}&ManufacturerIds={ManufacturerIds}&IsDropshippable={IsDropShippable}&CategoryOrClassificationId={CategoryOrClassificationId}&ClassificationTreeId={ClassificationTreeId}&SearchTerms={SearchTerms}&OrderBy={OrderBy}&OrderDir={OrderDir}&IsLinkedToCuratedProduct={IsLinkedToCuratedProduct}&ColorTagIds={ColorTagIds}&Page={Page}&PageSize={PageSize}:
  uriParameters:
    CompanyId:
      displayName: CompanyId
      type: integer
      example: 14146
      description: Identifier for the {{Company}}
      required: true
    VendorIds:
      displayName: VendorIds
      type: string
      example: 1217
      description: List of comma seperated integers representing identifiers for {{Vendors}}
      required: false
    ManufacturerIds:
      displayName: ManufacturerIds
      type: string
      example: 10540
      description: Array of integers representing identifiers for {{Manufacturers}}
      required: false
    IsDropShippable:
      displayName: IsDropshippable
      type: string
      example: true
      description: True to display products available for shipping, false to display products not available for shipping. This value is a best guess and should not be used for tracking dropshippable products
      required: false
    CategoryOrClassificationId:
      displayName: CategoryOrClassificationId
      type: string
      example: 4
      description: Identifier for the {{Category}} or {{Classification}}
      required: false
    ClassificationTreeId:
      type: string
      example: 1
      description: Identifier for a {{ClassificationTree}} to search within. If CategoryOrClassificationId is provided, this value is ignored
      required: false      
    SearchTerms:
      displayName: SearchTerms
      type: string
      example: iPhone
      description: Search terms
      required: false
    OrderBy:
      displayName: OrderBy
      type: string
      example: name
      description: A string value representing which field to order the results by. Acceptable values are name or dateAdded. Defaults to name if not specified
      required: false
    OrderDir:
      displayName: OrderDir
      type: string
      example: asc
      description: A string value representing the sort direction. Acceptable values are asc and desc. Defaults to asc if not specified
      required: false
    IsLinkedToCuratedProduct:
      type: string
      example: false
      description: A flag to indicate if the search should be restricted to Private Products
      required: false  
    ColorTagIds:
      type: string
      example: 1
      description: Array of integers representing identifiers for {{ColorTags}}
      required: false
    Page:
      displayName: Page
      type: string
      example: 1
      description: Page to display, if not specified defaults to 1
      required: false
    PageSize:
      displayName: PageSize
      type: string
      example: 10
      description: Number of results that will be returned, if not specified defaults to 20
      required: false
  type:
    collectionReadOnly:
      resource: CatalogSearchResult
  get: 
    displayName: Combining Search Filters
    description: |
      Search filters can be combined to narrow down results. The example below illustrates a search request using every possible filter.